import t from"net-snmp";import{promisify as d}from"util";var y={community:"MDOTnet2000",oid:{status:"1.3.6.1.4.1.13669.2.2.1.3.1.0",open:"1.3.6.1.4.1.13669.1.5.1.12",close:"1.3.6.1.4.1.13669.1.5.1.27"}},i=class{constructor(e){this.config=e;this.config=e||y}async openOrClose(e,l="open"){let r=t.createSession(e.ip,this.config.community,{port:e.port});try{let n=await d(r.get).call(r,[this.config.oid.status]);if(!n.length)throw new Error("No varbinds returned");if(t.isVarbindError(n[0]))throw new t.varbindError(n[0]);let o=String(n[0].value),u=[{oid:`1.3.6.1.4.1.13669.2.2.1.1.1.3.0.${o}`,type:t.ObjectType.OctetString,value:this.config.oid[l]},{oid:`1.3.6.1.4.1.13669.2.2.1.1.1.4.0.${o}`,type:t.ObjectType.OctetString,value:"SOC00001"},{oid:`1.3.6.1.4.1.13669.2.2.1.1.1.5.0.${o}`,type:t.ObjectType.OctetString,value:""},{oid:`1.3.6.1.4.1.13669.2.2.1.1.1.6.0.${o}`,type:t.ObjectType.Integer,value:0},{oid:`1.3.6.1.4.1.13669.2.2.1.1.1.7.0.${o}`,type:t.ObjectType.Integer,value:1}],s=await d(r.set).call(r,u);if(s.some(a=>t.isVarbindError(a)))throw s.reduce((c,p)=>(t.isVarbindError(p)&&c.push(t.varbindError(p)),c),[])}finally{r.close()}}};export{i as default};
